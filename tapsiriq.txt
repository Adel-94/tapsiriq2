D?yis?n ozund?
hans?sa bir m?lumat? saxlay?r. H?min m?lumat ayd?nd?r ki, yaddasda (RAMda)
saxlan?l?r. Bel?likl?, bir d?yis?n yaddas?n bir hiss?sidir. M?s?l?n, int a = 5; s?tri
yaddasda 4 bayt h?cmind? ad? ?a? olan bir sah? ay?r?r v? h?min yaddas sah?sin? 5
informasiyas?n? yukl?yir.
 C# - da d?yis?nl?r iki qrupa bolunur:
-Lokal d?yis?nl?r
- Qlobal d?yis?nl?r
Qlobal d?yis?nl?r bir sinf? aid orn?k (instance) d?yis?nl?rdir. Qlobal d?yis?nl?ri
yerl?sdiyi sinfin h?r bir noqt?sind?n muraci?t etm?k olur. Qlobal d?yis?nl?r? sah?l?r
(fields) d? deyilir. 
 Lokal d?yis?nl?r, bir sinif daxilind?ki h?r hans?sa kontekst ic?risind? t?yin olunan v?
ancaq h?min kontekst (buna ?hat? dair?si d? deyilir) ic?risind? muraci?t edil? bil?r
d?yis?nl?rdir. M?s?l?n metodlar?n parametrl?ri, metodlar?n govd?l?rind? t?yin olunan
d?yis?nl?r lokal d?yis?nl?rdir. Bir lokal d?yis?n?, butun sinif daxilind? muraci?t etm?k
olmaz.
 Veril?nl?r tipi, bir d?yis?nin n? kimi
m?umatlar? ozund? saxlaya bil?c?yini, h?min d?yis?nin yaddasdak? nufuzunu v? h?min
d?yis?n uz?rind? hans? ?m?liyyatlar? yerin? yetir? bil?c?yimizi t?yin ed?n bir m?ntiqi
anlay?sd?r. Tutaq ki, tam (int) tipind? bir d?yis?n t?yin etdik.
Dem?li bu d?yis?n ozund? tam ?d?dl?ri saxlaya bil?c?k, cunki onun tipi tamd?r.
Bir d?yis?ni asag?dak? kimi t?yin olunur.
<Tip> <d?yis?nin ad?>;

Burada tip, d?yis?nin tipidir. M?s?l?n, int, string, byte v? s. String tipd? ada adl? bir
d?yis?ni asag?dak? kimi t?yin edirl?r:

String ada;

D?y?r tipl?ri (valuable types)
- Referans tipl?ri (reference types)
Bu tipl?r bir-birl?rind?n cox f?rql?nir ?slind?. D?y?r tipl?ri, C# - ?n standart tipl?ridir.
D?y?r tipl?rin? aid bir d?yis?n, ozun? m?nims?dil?n qiym?ti birbasa ozund? saxlay?r.
Referans tipin? aid olan bir d?yis?n is?, m?lumatlar? birbasa ozund? saxlam?r, bunun 
yerin? h?min m?mulat?n saxan?ld?g? yaddas?n unvan?n? ozund? saxlay?r, y?ni h?min
yaddasa istinad edir. Buna gor? onlara ?refrans? tipli d?yis?nl?r deyilir.
C# - da d?y?r tipl?ri 4 yer? bolunur:
1. Tam tipl?r
2. K?rs tipl?r
3. Simvol tipl?r
4. M?ntiqi tipl?r

Tam tipl?r asag?dak?lard?r:
1. byte – 8 bit (1 bayt) h?cm? maikdir [0-255] parcas?nda tam qiym?t al?r.
2. sbyte – 8 bit h?cm? malikdir, [-128-127] parcas?nda tam qiym?t al?r.
3.ushort – isar?siz (unsigned) tipdir, 16 bit h?cm? malikdir v? [0 - 65535] parcas?nda
qiym?t al?r.
3. short – isr?lidir, 16 bit h?cmi var, [-32,768 - 32,767] parcas?nda tam qiym?t al?r.
4. uint – isar?siz (unsigned) tap tipdir, 32 bit h?cm? malik [0 - 4,294,967,295]
parcas?nda qiym?t al?r.
5. int – 32 tam h?cmi var, [-2,147,483,648 -- 2,147,483,647] parcas?nda qiym?t al?r.
6. ulong – 64 bit isar?siz v? [0 - 18,446,744,073,709,551,615] parcas?nda qiym?t al?r.
7. long – 64 bit isar?li tipdir v? [-923,372,036,854,775,808 -
9,223,372,036,854,775,807] parcas?nda qiym?t al?r.



K?rs tipl?r asag?dak?lard?r:
1. float - 32 bit h?cm? malikdir. Verguld?n sonra 6 m?rt?b? d?qiqliyin? malikdir.
Isar?lidir, -3.4 x 10^38 to + 3.4 x 10^38 parçasında qiymətlər alır.
2. double – 64 bit h?cm? var, verguld?n sonra 14 m?rt?b? d?qiqliy? malikdir. Isar?lidir.(+/-)5.0 x 10^-324 --- (+/-)1.7 x 10^308 parçasında qiymətlər alır.
3. decimal – 128 bit h?cmi var, verguld?n sonra 27 m?rt?b? d?qiqliy? malikdir v?
isar?lidir.(-7.9 x 10^28 ----- 7.9 x 10^28  parçasında qiymətlər alır.

 Simvol tipl?r asag?dak?lard?r:
1. char – bu tip ozund? bir t?k Unicode massivin? daxil olan simvolu saxlaya bil?r v? 16
bit h?cm? malikdir.


M?ntiqi tipl?r asag?dak?lard?r:
bool – bu tip? aid d?yis?n sad?c? ?true? v? ya ?false? (dogru v? ya yanl?s)
qiym?tl?rind?n birini ala bil?r. M?ntiqi ?m?liyyatlarda istifad? olunur, bir s?rtin duzgun
olub olmamag?n? mu?yy?nl?sdirm?k v? s. Hallarda ozunu gost?rir.
 Bir d?yis?n? m?nims?dil?n qiym?tl?r, h?min d?yis?nin tipi il? uyumlu olmal?d?r.
M?s?l?n
int a = 45.5;
kod s?tri duzgun deyil, cunki tam tipd? bir d?yis?n?, tam olmayan bir qiym?t verm?y?
cal?sd?q. 

M?ntiqi Operatorlar
 M?ntiqi operatorlar bool tipli d?yis?nl?r uz?rind? isl?m?k v? klassik m?ntiq
?m?liyyatlar?n? yerin? yetirm?k ucundur. M?s?l?n ?m?tb?x? gedib m?n? bir b?caq V? bir
c?ng?l g?tirin? cuml?rind? klassik m?ntiq (V?) ozunu gost?rir. Bu m?ntiq? ?sas?n
m?tb?xd?n b?caq tapmasan?z m?n? c?ng?l g?tirm?m?lisiniz ya da c?ng?l olmasa m?nim
ustum? sad?c? b?caqla g?lm?m?lisiniz. ?g?r ikisi d? varsa onda ikisini d? g?tirm?lisiniz.
?g?r m?n cuml?ni ?m?tb?x? gedib m?n? bir b?caq V? YA bir c?ng?l g?tirin? s?klind?
ifad? etmis olsayd?m, onda m?tb?xd? b?caq yoxdursa m?n? c?ng?li, ?g?r c?ng?l
yoxdursa onda b?cag?, ?g?r h?r ikisi varsa h?r ikisini g?tirm?li idiniz. M?ntiqi operatorlar
da bu m?ntiql? isl?yir. C# -da m?ntiqi operatorlar asag?dak?lard?r:
Operator M?nas? Diskret riyaziyyatda
& V? Konyunksiya
| V? YA Dizyunksiya
^ XOR mod(2)-? gor? c?m
! Inkar Inkar
&& S?rt? bagl? V?
|| S?rt? bagl? V? YA

S?rt? Bagl? M?ntiqi Operatorlar
 S?rt? bagl? m?ntiqi operatorlar && v? || operatotlar?d?r. Bu operatorlar da uygun
olaraq & v? | operatolar? kimi isl?yir. Lakin onlardan kicik bir f?rql?ri 
. Y?ni, soldak? operand false olarsa, sagdak?n?n n? olmas?ndan as?l?
olmayaraq cavab false olacaq. Amma & operatoru soldak?n?n cavab? n? olarsa olsun
sagdak?n? da n?z?r? al?r. Y?ni soldak?n?n false olmag?, umumi n?tic?nin false olmag?
dem?kdir, amma & operatoru haqqs?zl?q olmas?n dey? sagdak? operand? n?z?r? al?r.
Amma bel? baxanda soldak? operand false olarsa, sagdak?n? n?z?r? almaga n? luzum
var? Onsuz da cavab false olacaq. Niy? ?lav? vaxt itirib sagdak? operand?n cavab?n?n
hesablanmas? ucun ?m?liyyat yerin? yetir?k? M?hz bu isi yerin? yetirm?k ucun &
operatoruna alternativ olan && operatoru movcuddur. Bel?likl? && operatoru ?g?r
soldak? operand false olarsa sag t?r?f? umumiyy?tl? ?baxm?r?. ?g?r sol operand true
olarsa, m?lumdur ki, sagdak? hokm?n n?z?r? al?nacaq.


Asag?dak? c?dv?l riyazi operatorlar? t?qdim edir:

?vv?lc?d?n f?rz ed?k ki, A d?yis?nin? 10 , B d?yis?nin? 20 m?nims?dilmisdir.
operator          t?svir                                          n?tic?  
+                 iki ?d?in c?mi                                  A+B=30
-                 iki ?d?in f?rqi                                 A-B=-10
*                 iki ?d?in hasili                                 A*B=200
/                 bolm? ?m?                                        B/A=2
%                 bolun?nin bol?ni bol-d?n  al?nan qal?q
++                d?yis?nin qiym?tinin 1 vahid-vahid artmas?      A++ = 11
--                d?yis?nin qiym?tinin 1 vahid-vahid azalmas?     A--=9


İndi isə şərt operatorlarına nəzər salaq.
Şərt operatorları aşağıdakılardır:
if 
if ... else 
if ... else if...

İf operatoru işləmə prinsipi :
İf -dən sonra mötərizə daxilində bizə lazım olan şərt qoyulur.Əgər şərt ödənərsə,bu zaman statement(bəyənat,sorğu) icra olunur.Sintaksisi aşağıdakı şəkildədir:
if (expression){
   Statement(s) to be executed if expression is true
}
if ... else operatoru işləmə prinsipi :

if.. else operatoru if operatorunun daha geniş formasıdır.Yəni,bu operator müxtəlif yoxlama yolları vasitəsilə sorğuları icra etməyə imkan verir.Sİntaksinə nəzər salsaq daha dəqiq görə bilərik : 

if (expression){
   Statement(s) to be executed if expression is true
}

else{
   Statement(s) to be executed if expression is false
}
İf -dən sonra mötərizə daxilində bizə lazım olan şərt qoyulur.Əgər şərt ödənərsə,bu zaman statement(bəyənat,sorğu) icra olunur.Əgər ödənməzsa, bu zaman else blokunun içərisindəki sorğu icra olunur.

if ... else if...operatoru işləmə prinsipi :
Bu operator şərt blogunun içərisində müxtəlif şərtlər yaratmağa və icra etməyə imkan verir.Sİntaksisinə nəzər salaq:

if (expression 1){
   Statement(s) to be executed if expression 1 is true
}

else if (expression 2){
   Statement(s) to be executed if expression 2 is true
}

else if (expression 3){
   Statement(s) to be executed if expression 3 is true
}

else{
   Statement(s) to be executed if no expression is true
}

Burada növbə ilə bütün şərtlərə baxılır.Əgər 1-ci ödənərsə, sorğu icra olunur,nəticəni ekrana çıxarır.Ödənməzsə,növbəti bloqdakı şərtə baxilir, ödənərsə,eynilə orğu icra olunur,nəticəni ekrana çıxarır.Əgər verilən şərtlərin heç biri ödənməzsa,bu halda else bloqundakı əmri ekrana çıxarır.






